{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","reverse","map","good","sort","a","b","localeCompare","toString","length","console","log","App","state","className","type","onClick","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAgBK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAERC,EAAY,YAAOH,GAEvB,IAAmB,IAAfE,EACF,OAAOC,EAAaC,UAAUC,KAAI,SAACC,GACjC,OACE,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,MAO9B,OAAQL,GACN,KAAK,EACHE,EAAeA,EAAaI,MAC1B,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,cAAcD,EAAEE,eAG/B,MAEF,KAAK,EACHR,EAAeA,EAAaI,MAC1B,SAACC,EAAGC,GAAJ,OAAWD,EAAEI,OAASH,EAAEG,UAE1B,MAEF,KAAK,EACHT,EAAY,YAAOH,GAUvB,OAFAa,QAAQC,IAAIb,EAAUC,GAGpBC,EAAaE,KAAI,SAACC,GAChB,OACE,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,O,SAzD3BT,O,eAAAA,I,uBAAAA,I,mBAAAA,I,kBAAAA,M,KAiEE,IAAMkB,EAAb,4MACEC,MAAQ,CACNd,YAAY,EACZD,SAAU,GAHd,4CAME,WAAU,IAAD,OACP,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,0BACVE,QAAS,kBAAO,EAAKC,SAAS,CAAEnB,SAAU,EAAGC,YAAY,KAH3D,iCAQA,wBACEgB,KAAK,SACLD,UAAU,6BACVE,QAAS,kBAAO,EAAKC,SAAS,CAAEnB,SAAU,EAAGC,YAAY,KAH3D,4BAQA,wBACEgB,KAAK,SACLD,UAAU,6BACVE,QAAS,kBAAO,EAAKC,SAAS,CAAElB,YAAY,KAH9C,qBAQA,wBACEgB,KAAK,SACLD,UAAU,4BACVE,QAAS,kBAAO,EAAKC,SAAS,CAC5BnB,SAAU,EACVC,YAAY,KALhB,sBAYF,6BACE,6BACGH,EAAkBD,EAAiBuB,KAAKL,kBAhDrD,GAAyBM,IAAMC,WC/E/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c69a2b2b.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n  RESET,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  let visibleGoods = [...goods];\n\n  if (isReversed === true) {\n    return visibleGoods.reverse().map((good) => {\n      return (\n        <li data-cy=\"Good\" key={good}>\n          {good}\n        </li>\n      );\n    });\n  }\n\n  switch (sortType) {\n    case 1:\n      visibleGoods = visibleGoods.sort(\n        (a, b) => (a.localeCompare(b.toString())\n        ),\n      );\n      break;\n\n    case 2:\n      visibleGoods = visibleGoods.sort(\n        (a, b) => (a.length - b.length),\n      );\n      break;\n\n    case 3:\n      visibleGoods = [...goods];\n      break;\n\n    default:\n      break;\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return (\n    visibleGoods.map((good) => {\n      return (\n        <li data-cy=\"Good\" key={good}>\n          {good}\n        </li>\n      );\n    })\n  );\n}\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  state = {\n    isReversed: false,\n    sortType: 0,\n  };\n\n  render() {\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className=\"button is-info is-light\"\n            onClick={() => (this.setState({ sortType: 1, isReversed: false }))}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-success is-light\"\n            onClick={() => (this.setState({ sortType: 2, isReversed: false }))}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-warning is-light\"\n            onClick={() => (this.setState({ isReversed: true }))}\n          >\n            Reverse\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => (this.setState({\n              sortType: 3,\n              isReversed: false,\n            }))}\n          >\n            Reset\n          </button>\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, this.state)}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}