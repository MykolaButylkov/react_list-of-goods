{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","NONE","RESET","ALPHABET","sort","a","b","localeCompare","toString","LENGTH","length","reverse","map","good","App","state","isResetButton","handleRevers","setState","prevState","className","type","cn","this","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAkBK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAERC,EAAyB,CAAC,IAE9B,OAAQF,GACN,KAAKJ,EAASO,KACd,KAAKP,EAASQ,MACZF,EAAY,YAAOH,GACnB,MAEF,KAAKH,EAASS,SACZH,EAAe,YAAIH,GAAOO,MACxB,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,cAAcD,EAAEE,eAG/B,MAEF,KAAKd,EAASe,OACZT,EAAe,YAAIH,GAAOO,MACxB,SAACC,EAAGC,GAAJ,OAAWD,EAAEK,OAASJ,EAAEI,UAY9B,OAJIX,GACFC,EAAaW,UAIbX,EAAaY,KAAI,SAACC,GAChB,OACE,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,O,SAnD3BnB,O,eAAAA,I,uBAAAA,I,mBAAAA,I,kBAAAA,M,KA2DE,IAAMoB,EAAb,4MACEC,MAAQ,CACNhB,YAAY,EACZD,SAAUJ,EAASO,KACnBe,eAAe,GAJnB,EAOEC,aAAe,WACb,EAAKC,UAAS,SAACC,GACb,MAAO,CACLpB,YAAaoB,EAAUpB,WACvBiB,eAAe,OAXvB,4CAgBE,WAAU,IAAD,OACP,OACE,sBAAKI,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,SACA,UACA,CAAE,WAAYC,KAAKR,MAAMjB,WAAaJ,EAASS,WAGnDqB,QAAS,kBAAM,EAAKN,SAAS,CAC3BpB,SAAUJ,EAASS,SACnBa,eAAe,KAXnB,iCAiBA,wBACEK,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,WAAYC,KAAKR,MAAMjB,WAAaJ,EAASe,SAGnDe,QAAS,kBAAM,EAAKN,SAAS,CAC3BpB,SAAUJ,EAASe,OACnBO,eAAe,KAXnB,4BAiBA,wBACEK,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,YAAsC,IAA1BC,KAAKR,MAAMhB,aAG7ByB,QAASD,KAAKN,aAThB,qBAcEM,KAAKR,MAAMC,eACX,wBACEK,KAAK,SACLD,UAAU,4BACVI,QACE,kBAAM,EAAKN,SAAS,CAClBpB,SAAUJ,EAASQ,MACnBH,YAAY,EACZiB,eAAe,KAPrB,sBAgBJ,6BACE,6BACGpB,EAAkBD,EAAiB4B,KAAKR,kBAvFrD,GAAyBU,IAAMC,WC1E/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ad39c01c.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n  RESET,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n  isResetButton: boolean,\n};\n\n// Use this function in the render method to prepare goods\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  let visibleGoods: string[] = [''];\n\n  switch (sortType) {\n    case SortType.NONE:\n    case SortType.RESET:\n      visibleGoods = [...goods];\n      break;\n\n    case SortType.ALPHABET:\n      visibleGoods = [...goods].sort(\n        (a, b) => (a.localeCompare(b.toString())\n        ),\n      );\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods = [...goods].sort(\n        (a, b) => (a.length - b.length),\n      );\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    visibleGoods.map((good) => {\n      return (\n        <li data-cy=\"Good\" key={good}>\n          {good}\n        </li>\n      );\n    })\n  );\n}\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n    isResetButton: false,\n  };\n\n  handleRevers = () => {\n    this.setState((prevState) => {\n      return {\n        isReversed: !prevState.isReversed,\n        isResetButton: true,\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              cn(\n                'button',\n                'is-info',\n                { 'is-light': this.state.sortType !== SortType.ALPHABET },\n              )\n            }\n            onClick={() => this.setState({\n              sortType: SortType.ALPHABET,\n              isResetButton: true,\n            })}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              cn(\n                'button',\n                'is-success',\n                { 'is-light': this.state.sortType !== SortType.LENGTH },\n              )\n            }\n            onClick={() => this.setState({\n              sortType: SortType.LENGTH,\n              isResetButton: true,\n            })}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              cn(\n                'button',\n                'is-warning',\n                { 'is-light': this.state.isReversed !== true },\n              )\n            }\n            onClick={this.handleRevers}\n          >\n            Reverse\n          </button>\n\n          {(this.state.isResetButton) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={\n                () => this.setState({\n                  sortType: SortType.RESET,\n                  isReversed: false,\n                  isResetButton: false,\n                })\n              }\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, this.state)}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}