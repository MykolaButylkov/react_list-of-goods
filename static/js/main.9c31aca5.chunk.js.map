{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","visibleGoods","getReorderedGoods","goods","sortType","isReversed","reverse","map","good","sort","a","b","localeCompare","toString","length","console","log","App","state","isSelected1","isSelected2","isSelected3","isSelected4","this","className","type","cn","onClick","setState","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,mBAAAA,I,kBAAAA,M,KAaL,IAAIE,EAAY,UAAOD,GAEhB,SAASE,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAEZ,IAAmB,IAAfA,EACF,OAAOJ,EAAaK,UAAUC,KAAI,SAACC,GACjC,OACE,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,MAO9B,OAAQJ,GACN,KAAK,EACHH,EAAeA,EAAaQ,MAC1B,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,cAAcD,EAAEE,eAG/B,MAEF,KAAK,EACHZ,EAAeA,EAAaQ,MAC1B,SAACC,EAAGC,GAAJ,OAAWD,EAAEI,OAASH,EAAEG,UAE1B,MAEF,KAAK,EACHb,EAAY,YAAOE,GAUvB,OAFAY,QAAQC,IAAIZ,EAAUC,GAGpBJ,EAAaM,KAAI,SAACC,GAChB,OACE,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,MAQzB,IAAMS,EAAb,4MACEC,MAAQ,CACNb,YAAY,EACZD,SAAU,GAHd,4CAME,WAAU,IAAD,OACHe,GAAc,EACdC,GAAc,EACdC,GAAc,EACdC,GAAc,EAElB,OAAQC,KAAKL,MAAMd,UACjB,KAAK,EACHe,GAAc,EACdC,GAAc,EACd,MAEF,KAAK,EACHD,GAAc,EACdC,GAAc,EACd,MAEF,KAAK,EACHD,GAAc,EACdC,GAAc,EAmBlB,OAXEC,GAD4B,IAA1BE,KAAKL,MAAMb,WAObiB,EAD0B,IAAxBC,KAAKL,MAAMd,WAA4C,IAA1BmB,KAAKL,MAAMb,WAO1C,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IAAG,SAAU,UAAW,CAAE,WAAYP,IAExCQ,QAAS,WACP,OACE,EAAKC,SAAS,CAAExB,SAAU,EAAGC,YAAY,KAP/C,iCAcA,wBACEoB,KAAK,SACLD,UACEE,IAAG,SAAU,UAAW,CAAE,WAAYN,IAExCO,QAAS,kBAAO,EAAKC,SAAS,CAAExB,SAAU,EAAGC,YAAY,KAL3D,4BAUA,wBACEoB,KAAK,SACLD,UACEE,IAAG,SAAU,UAAW,CAAE,WAAYL,IAExCM,QAAS,kBAAO,EAAKC,SAAS,CAAEvB,YAAY,KAL9C,qBAUCiB,GACC,wBACEG,KAAK,SACLD,UACEE,IAAG,SAAU,CAAE,YAAaJ,GAAe,YAE7CK,QAAS,kBAAO,EAAKC,SAAS,CAC5BxB,SAAU,EACVC,YAAY,KAPhB,sBAeJ,6BACE,6BACGH,EAAkBF,EAAiBuB,KAAKL,kBAnGrD,GAAyBW,IAAMC,WChF/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9c31aca5.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n  RESET,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nlet visibleGoods = [...goodsFromServer];\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  if (isReversed === true) {\n    return visibleGoods.reverse().map((good) => {\n      return (\n        <li data-cy=\"Good\" key={good}>\n          {good}\n        </li>\n      );\n    });\n  }\n\n  switch (sortType) {\n    case 1:\n      visibleGoods = visibleGoods.sort(\n        (a, b) => (a.localeCompare(b.toString())\n        ),\n      );\n      break;\n\n    case 2:\n      visibleGoods = visibleGoods.sort(\n        (a, b) => (a.length - b.length),\n      );\n      break;\n\n    case 3:\n      visibleGoods = [...goods];\n      break;\n\n    default:\n      break;\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return (\n    visibleGoods.map((good) => {\n      return (\n        <li data-cy=\"Good\" key={good}>\n          {good}\n        </li>\n      );\n    })\n  );\n}\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  state = {\n    isReversed: false,\n    sortType: 0,\n  };\n\n  render() {\n    let isSelected1 = true;\n    let isSelected2 = true;\n    let isSelected3 = true;\n    let isSelected4 = true;\n\n    switch (this.state.sortType) {\n      case 1:\n        isSelected1 = false;\n        isSelected2 = true;\n        break;\n\n      case 2:\n        isSelected1 = true;\n        isSelected2 = false;\n        break;\n\n      case 3:\n        isSelected1 = true;\n        isSelected2 = true;\n        break;\n\n      default:\n        break;\n    }\n\n    if (this.state.isReversed === true) {\n      isSelected3 = false;\n    } else {\n      isSelected3 = true;\n    }\n\n    if (this.state.sortType === 0 && this.state.isReversed === false) {\n      isSelected4 = false;\n    } else {\n      isSelected4 = true;\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              cn('button', 'is-info', { 'is-light': isSelected1 })\n            }\n            onClick={() => {\n              return (\n                this.setState({ sortType: 1, isReversed: false })\n              );\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              cn('button', 'is-info', { 'is-light': isSelected2 })\n            }\n            onClick={() => (this.setState({ sortType: 2, isReversed: false }))}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              cn('button', 'is-info', { 'is-light': isSelected3 })\n            }\n            onClick={() => (this.setState({ isReversed: true }))}\n          >\n            Reverse\n          </button>\n\n          {isSelected4 && (\n            <button\n              type=\"button\"\n              className={\n                cn('button', { 'is-danger': isSelected4 }, 'is-light')\n              }\n              onClick={() => (this.setState({\n                sortType: 3,\n                isReversed: false,\n              }))}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, this.state)}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}