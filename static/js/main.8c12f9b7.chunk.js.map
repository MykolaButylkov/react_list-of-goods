{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","reverse","filter","a","b","localeCompare","toString","length","console","log","map","good","App","state","className","type","onClick","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAERC,EAAY,YAAOH,GAMvB,QAJmB,IAAfE,GACFC,EAAaC,UAGPH,GACN,KAAK,EACHE,EAAY,YAAOH,GACnB,MAEF,KAAK,EACHG,EAAe,YAAIH,GAAOK,QACxB,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,cAAcD,EAAEE,eAG/B,MAEF,KAAK,EACHN,EAAe,YAAIH,GAAOK,QACxB,SAACC,EAAGC,GAAJ,OAAWD,EAAEI,OAASH,EAAEE,WAAWC,UAWzC,OAFAC,QAAQC,IAAIX,EAAUC,GAGpBC,EAAaU,KAAI,SAACC,GAChB,OACE,oBAAI,UAAQ,OAAZ,SACGA,Q,SAnDNjB,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0DE,IAAMkB,EAAb,4MACEC,MAAQ,CACNd,YAAY,EACZD,SAAU,GAHd,4CAME,WAAU,IAAD,OACP,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,0BACVE,QAAS,kBAAO,EAAKC,SAAS,CAAEnB,SAAU,KAH5C,iCAQA,wBACEiB,KAAK,SACLD,UAAU,6BACVE,QAAS,kBAAO,EAAKC,SAAS,CAAEnB,SAAU,KAH5C,4BAQA,wBACEiB,KAAK,SACLD,UAAU,6BACVE,QAAS,kBAAO,EAAKC,SAAS,CAAElB,YAAY,KAH9C,qBASA,wBACEgB,KAAK,SACLD,UAAU,4BACVE,QAAS,kBAAO,EAAKC,SAAS,CAAEnB,SAAU,KAH5C,sBASF,6BACE,6BACGF,EAAkBD,EAAiBuB,KAAKL,kBA9CrD,GAAyBM,IAAMC,WCxE/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8c12f9b7.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  let visibleGoods = [...goods];\n\n  if (isReversed === true) {\n    visibleGoods.reverse();\n  }\n\n  switch (sortType) {\n    case 0:\n      visibleGoods = [...goods];\n      break;\n\n    case 1:\n      visibleGoods = [...goods].filter(\n        (a, b) => (a.localeCompare(b.toString())\n        ),\n      );\n      break;\n\n    case 2:\n      visibleGoods = [...goods].filter(\n        (a, b) => (a.length - b.toString().length),\n      );\n      break;\n\n    default:\n      break;\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return (\n    visibleGoods.map((good) => {\n      return (\n        <li data-cy=\"Good\">\n          {good}\n        </li>\n      );\n    })\n  );\n}\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  state = {\n    isReversed: false,\n    sortType: 0,\n  };\n\n  render() {\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className=\"button is-info is-light\"\n            onClick={() => (this.setState({ sortType: 1 }))}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-success is-light\"\n            onClick={() => (this.setState({ sortType: 2 }))}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-warning is-light\"\n            onClick={() => (this.setState({ isReversed: true }))}\n\n          >\n            Reverse\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => (this.setState({ sortType: 0 }))}\n          >\n            Reset\n          </button>\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, this.state)}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}